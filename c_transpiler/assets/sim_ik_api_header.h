int64_t addIkElement(int64_t environmentHandle, int64_t ikGroupHandle, int64_t tipDummyHandle);
std::tuple<int64_t, json> addIkElementFromScene(int64_t environmentHandle, int64_t ikGroup, int64_t baseHandle, int64_t tipHandle, int64_t targetHandle, int64_t constraints);
int64_t applyIkEnvironmentToScene(int64_t environmentHandle, int64_t ikGroup, std::optional<bool> applyOnlyWhenSuccessful = {});
void applySceneToIkEnvironment(int64_t environmentHandle, int64_t ikGroup);
bool computeJacobian(int64_t environmentHandle, int64_t ikGroupHandle, int64_t options);
int64_t createDummy(int64_t environmentHandle, std::optional<std::string> dummyName = {});
int64_t createEnvironment();
int64_t createIkGroup(int64_t environmentHandle, std::optional<std::string> ikGroupName = {});
int64_t createJoint(int64_t environmentHandle, int64_t jointType, std::optional<std::string> jointName = {});
bool doesIkGroupExist(int64_t environmentHandle, std::string ikGroupName);
bool doesObjectExist(int64_t environmentHandle, std::string objectName);
int64_t duplicateEnvironment(int64_t environmentHandle);
void eraseEnvironment(int64_t environmentHandle);
void eraseObject(int64_t environmentHandle, int64_t objectHandle);
std::vector<double> findConfig(int64_t environmentHandle, int64_t ikGroupHandle, std::vector<int64_t> jointHandles, std::optional<double> thresholdDist = {}, std::optional<double> maxTime = {}, std::optional<std::vector<double>> metric = {}, std::optional<std::string> validationCallback = {}, std::optional<json> auxData = {});
std::vector<double> generatePath(int64_t environmentHandle, int64_t ikGroupHandle, std::vector<int64_t> jointHandles, int64_t tipHandle, int64_t pathPointCount, std::optional<std::string> validationCallback = {}, std::optional<json> auxData = {});
std::vector<double> getAlternateConfigs(int64_t environmentHandle, std::vector<int64_t> jointHandles, std::optional<std::vector<double>> lowLimits = {}, std::optional<std::vector<double>> ranges = {});
std::tuple<int64_t, int64_t> getIkElementBase(int64_t environmentHandle, int64_t ikGroupHandle, int64_t elementHandle);
int64_t getIkElementConstraints(int64_t environmentHandle, int64_t ikGroupHandle, int64_t elementHandle);
int64_t getIkElementFlags(int64_t environmentHandle, int64_t ikGroupHandle, int64_t elementHandle);
std::vector<double> getIkElementPrecision(int64_t environmentHandle, int64_t ikGroupHandle, int64_t elementHandle);
std::vector<double> getIkElementWeights(int64_t environmentHandle, int64_t ikGroupHandle, int64_t elementHandle);
std::tuple<int64_t, double, int64_t> getIkGroupCalculation(int64_t environmentHandle, int64_t ikGroupHandle);
int64_t getIkGroupFlags(int64_t environmentHandle, int64_t ikGroupHandle);
int64_t getIkGroupHandle(int64_t environmentHandle, std::string ikGroupName);
std::tuple<std::vector<double>, std::vector<int64_t>> getJacobian(int64_t environmentHandle, int64_t ikGroupHandle);
std::tuple<int64_t, double, double> getJointDependency(int64_t environmentHandle, int64_t jointHandle);
double getJointIkWeight(int64_t environmentHandle, int64_t jointHandle);
std::tuple<bool, std::vector<double>> getJointInterval(int64_t environmentHandle, int64_t jointHandle);
std::vector<double> getJointMatrix(int64_t environmentHandle, int64_t jointHandle);
double getJointMaxStepSize(int64_t environmentHandle, int64_t jointHandle);
int64_t getJointMode(int64_t environmentHandle, int64_t jointHandle);
double getJointPosition(int64_t environmentHandle, int64_t jointHandle);
double getJointScrewPitch(int64_t environmentHandle, int64_t jointHandle);
std::tuple<std::vector<double>, std::vector<double>, std::vector<double>> getJointTransformation(int64_t environmentHandle, int64_t jointHandle);
int64_t getJointType(int64_t environmentHandle, int64_t jointHandle);
int64_t getLinkedDummy(int64_t environmentHandle, int64_t dummyHandle);
double getManipulability(int64_t environmentHandle, int64_t ikGroupHandle);
int64_t getObjectHandle(int64_t environmentHandle, std::string objectName);
std::vector<double> getObjectMatrix(int64_t environmentHandle, int64_t objectHandle, int64_t relativeToObjectHandle);
int64_t getObjectParent(int64_t environmentHandle, int64_t objectHandle);
std::vector<double> getObjectPose(int64_t environmentHandle, int64_t objectHandle, int64_t relativeToObjectHandle);
std::tuple<std::vector<double>, std::vector<double>, std::vector<double>> getObjectTransformation(int64_t environmentHandle, int64_t objectHandle, int64_t relativeToObjectHandle);
std::tuple<int64_t, std::string, bool, int64_t> getObjects(int64_t environmentHandle, int64_t index);
int64_t handleIkGroup(int64_t environmentHandle, std::optional<int64_t> ikGroupHandle = {});
void load(int64_t environmentHandle, std::string data);
std::string save(int64_t environmentHandle);
void setIkElementBase(int64_t environmentHandle, int64_t ikGroupHandle, int64_t elementHandle, int64_t baseHandle, std::optional<int64_t> constraintsBaseHandle = {});
void setIkElementConstraints(int64_t environmentHandle, int64_t ikGroupHandle, int64_t elementHandle, int64_t constraints);
void setIkElementFlags(int64_t environmentHandle, int64_t ikGroupHandle, int64_t elementHandle, int64_t flags);
void setIkElementPrecision(int64_t environmentHandle, int64_t ikGroupHandle, int64_t elementHandle, std::vector<double> precision);
void setIkElementWeights(int64_t environmentHandle, int64_t ikGroupHandle, int64_t elementHandle, std::vector<double> weights);
void setIkGroupCalculation(int64_t environmentHandle, int64_t ikGroupHandle, int64_t method, double damping, int64_t maxIterations);
void setIkGroupFlags(int64_t environmentHandle, int64_t ikGroupHandle, int64_t flags);
void setJointDependency(int64_t environmentHandle, int64_t jointHandle, int64_t depJointHandle, std::optional<double> offset = {}, std::optional<double> mult = {});
void setJointIkWeight(int64_t environmentHandle, int64_t jointHandle, double weight);
void setJointInterval(int64_t environmentHandle, int64_t jointHandle, bool cyclic, std::optional<std::vector<double>> interval = {});
void setJointMaxStepSize(int64_t environmentHandle, int64_t jointHandle, double stepSize);
void setJointMode(int64_t environmentHandle, int64_t jointHandle, int64_t jointMode);
void setJointPosition(int64_t environmentHandle, int64_t jointHandle, double position);
void setJointScrewPitch(int64_t environmentHandle, int64_t jointHandle, double pitch);
void setLinkedDummy(int64_t environmentHandle, int64_t dummyHandle, int64_t linkedDummyHandle);
void setObjectMatrix(int64_t environmentHandle, int64_t objectHandle, int64_t relativeToObjectHandle, std::vector<double> matrix);
void setObjectParent(int64_t environmentHandle, int64_t objectHandle, int64_t parentObjectHandle, std::optional<bool> keepInPlace = {});
void setObjectPose(int64_t environmentHandle, int64_t objectHandle, int64_t relativeToObjectHandle, std::vector<double> pose);
void setObjectTransformation(int64_t environmentHandle, int64_t objectHandle, int64_t relativeToObjectHandle, std::vector<double> position, std::vector<double> eulerOrQuaternion);
void setSphericalJointMatrix(int64_t environmentHandle, int64_t jointHandle, std::vector<double> matrix);
void setSphericalJointRotation(int64_t environmentHandle, int64_t jointHandle, std::vector<double> eulerOrQuaternion);